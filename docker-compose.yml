services:
  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - APP_ENV=production
      - APP_KEY=base64:BySn9S+bL7+yL5VNvIETSpl7hYHfZagwHCpZ2X6sRiU=
      - DB_CONNECTION=sqlite
    volumes:
      - ./web-ui/database:/var/www/html/database
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    environment:
      - APP_ENV=production
      - APP_KEY=base64:tf0XKkjBBdG5GBLSXQmUTDJfR8wql+aqAdwYwniNtQk=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=db_ticket_booking_system
      - DB_USERNAME=root
      - DB_PASSWORD= # Keep this empty to match your setup
    volumes:
      - ./backend:/var/www/html
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=db_ticket_booking_system
      - MYSQL_ALLOW_EMPTY_PASSWORD=true # Allow empty root password
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web-ui
      - backend

volumes:
  db-data:
# base64:tf0XKkjBBdG5GBLSXQmUTDJfR8wql+aqAdwYwniNtQk=       --backend
# base64:BySn9S+bL7+yL5VNvIETSpl7hYHfZagwHCpZ2X6sRiU=       --web-ui
